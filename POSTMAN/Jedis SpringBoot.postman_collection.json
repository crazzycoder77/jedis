{
	"info": {
		"_postman_id": "976c8fc7-8404-4688-9ace-e9497afafe6a",
		"name": "Jedis SpringBoot",
		"description": "# Introduction\nSpringBoot Redis API\n\n# Overview\nSupports basic Redis Opertaions using Jedis\n\n# Authenticatio\nBy HTTP/Json Request and Response\n\n# Error Codes\n200 - Ok \n400 - Bad Gateway/File Not Found\n500 - Internal Server Error\n\n# Rate limit\n16 simulteneous Redis connections",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Programmer String Post 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e61475a6-1d74-4526-ae9d-a5d23781a842",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2950259d-ca2f-4812-932f-7c854318e725",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\": \"20\", \"company\": \"abc\", \"name\": \"praveen\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/programmer-string",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"programmer-string"
					]
				},
				"description": "Post request with Json data {\"id\": \"20\", \"company\": \"abc\", \"name\": \"praveen\"}"
			},
			"response": []
		},
		{
			"name": "Programmer String get with available data",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/programmer-string/20",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"programmer-string",
						"20"
					]
				}
			},
			"response": []
		},
		{
			"name": "Programmer String with not avaialble data",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/programmer-string/30",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"programmer-string",
						"30"
					]
				}
			},
			"response": []
		},
		{
			"name": "Programmer List Post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ef72cf3a-5cdc-46a2-a8b9-3008587f509b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "12a42bf0-2f73-4c2f-9750-bb4687f6049a",
						"exec": [
							"var programmers = pm.variables.get(\"programmers\"); ",
							"if(programmers && programmers.length>0){",
							"    postman.setNextRequest(\"localhost:8080/programmer-list\");",
							"}",
							"else{",
							"    postman.setNextRequest(null);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n\t{\n\t\t\"id\": \"10\",\n\t\t\"company\": \"abc\",\n\t\t\"name\": \"foo\"\n\t},\n\t{\n\t\t\"id\": \"20\",\n\t\t\"company\": \"abc\",\n\t\t\"name\": \"baa\"\n\t}, \n\t{\n\t\t\"id\": \"30\",\n\t\t\"company\": \"xyz\",\n\t\t\"name\": \"praveen\"\n\t\t\n\t}\n\n]\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/programmer-list",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"programmer-list"
					]
				},
				"description": "Post list of programmers as jason"
			},
			"response": []
		},
		{
			"name": "Gets List of Programmers as json",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/programmer-list",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"programmer-list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Programmer Set Post with jason",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n\t{\n\t\t\"id\": \"10\",\n\t\t\"company\": \"abc\",\n\t\t\"name\": \"foo\"\n\t},\n\t{\n\t\t\"id\": \"10\",\n\t\t\"company\": \"abc\",\n\t\t\"name\": \"foo\"\n\t},\n\t{\n\t\t\"id\": \"20\",\n\t\t\"company\": \"abc\",\n\t\t\"name\": \"baa\"\n\t}, \n\t{\n\t\t\"id\": \"30\",\n\t\t\"company\": \"xyz\",\n\t\t\"name\": \"praveen\"\n\t\t\n\t}\n\n]\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/programmer-set",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"programmer-set"
					]
				},
				"description": "Call to Programmer set Post api with a simulation of duplicate data"
			},
			"response": []
		},
		{
			"name": "Programmer Set Get",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/programmer-set",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"programmer-set"
					]
				},
				"description": "Gets json daat of programmer set "
			},
			"response": []
		},
		{
			"name": "Is Programmer In Programmer Set With Valid Programmer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\": \"10\", \"company\": \"abc\", \"name\": \"foo\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/isProgrammer",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"isProgrammer"
					]
				},
				"description": "Makes Call to isProgrammer with valid Programmer"
			},
			"response": []
		},
		{
			"name": "Is Programmer In Programmer Set With Invalid Programmer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\": \"100\", \"company\": \"abasgdasc\", \"name\": \"foobaa\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/isProgrammer",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"isProgrammer"
					]
				},
				"description": "makes call to isProgrammer API with invalid Progarmmer"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}